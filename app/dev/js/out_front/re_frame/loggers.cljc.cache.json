["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$console",["^ ","~$log",["^ ","~$bind",["^ "]],"~$warn",["^ ","^5",["^ "]],"~$error",["^ ","^5",["^ "]],"~$group",["^ ","^5",["^ "]],"~$groupEnd",["^ ","^5",["^ "]]]],"~:use-macros",["^ ","~$difference","~$clojure.set"],"~:excludes",["~#set",[]],"~:name","~$re-frame.loggers","~:imports",null,"~:requires",["^ ","^<","^<"],"~:uses",["^ ","^;","^<"],"~:defs",["^ ","~$loggers",["^ ","~:meta",["^ ","~:file","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/re_frame/loggers.cljc","~:line",14,"~:column",16,"~:end-line",14,"~:end-column",23,"~:private",true],"^L",true,"^?","~$re-frame.loggers/loggers","^G","app/dev/js/out_front/re_frame/loggers.cljc","^K",23,"^I",1,"^H",14,"^J",14,"~:tag","~$any","~:doc","Holds the current set of logging functions.\n   By default, re-frame uses the functions provided by js/console.\n   Use `set-loggers!` to change these defaults\n  "],"^3",["^ ","~:protocol-inline",null,"^F",["^ ","^G","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/re_frame/loggers.cljc","^H",35,"^I",7,"^J",35,"^K",14,"~:arglists",["~#list",["~$quote",["^S",[["~$level","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^S",["^U","^V"]]],"^R",["^S",[["^U","~$&","^V"]]],"~:arglists-meta",["^S",[null]]]],"^?","~$re-frame.loggers/console","^X",true,"^G","app/dev/js/out_front/re_frame/loggers.cljc","^K",14,"^W",["^ ","^X",true,"^Y",1,"^Z",[["^S",["^U","^V"]]],"^R",["^S",[["^U","~$&","^V"]]],"^[",["^S",[null]]],"^Z",[["^S",["^U","^V"]]],"~:protocol-impl",null,"^[",["^S",[null]],"^I",1,"^H",35,"^J",35,"^Y",1,"~:fn-var",true,"^R",["^S",[["^U","~$&","^V"]]]],"~$set-loggers!",["^ ","^Q",null,"^F",["^ ","^G","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/re_frame/loggers.cljc","^H",41,"^I",7,"^J",41,"^K",19,"^R",["^S",["^T",["^S",[["~$new-loggers"]]]]],"^P","Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"],"^?","~$re-frame.loggers/set-loggers!","^X",false,"^G","app/dev/js/out_front/re_frame/loggers.cljc","^K",19,"^Z",["^S",[["^14"]]],"^11",null,"^[",["^S",[null,null]],"^I",1,"^H",41,"^J",41,"^Y",1,"^12",true,"^R",["^S",["^T",["^S",[["^14"]]]]],"^P","Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"],"~$get-loggers",["^ ","^Q",null,"^F",["^ ","^G","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/re_frame/loggers.cljc","^H",48,"^I",7,"^J",48,"^K",18,"^R",["^S",["^T",["^S",[[]]]]],"^P","Get the current logging functions used by re-frame."],"^?","~$re-frame.loggers/get-loggers","^X",false,"^G","app/dev/js/out_front/re_frame/loggers.cljc","^K",18,"^Z",["^S",[[]]],"^11",null,"^[",["^S",[null,null]],"^I",1,"^H",48,"^J",48,"^Y",0,"^12",true,"^R",["^S",["^T",["^S",[[]]]]],"^P","Get the current logging functions used by re-frame."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^>",["~:group","~:warn","~:error","~:groupEnd","~:log"]],"~:order",["^1?","^1<","^1=","^1;","^1>"]],"^P",null]