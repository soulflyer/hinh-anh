["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$console","~$mranderson047.re-frame.v0v10v2.re-frame.loggers","~$empty-queue","~$mranderson047.re-frame.v0v10v2.re-frame.interop","~$debug-enabled?","^6"],"~:excludes",["~#set",[]],"~:name","~$mranderson047.re-frame.v0v10v2.re-frame.events","~:imports",null,"~:requires",["^ ","~$mranderson047.re-frame.v0v10v2.re-frame.db","^>","~$mranderson047.re-frame.v0v10v2.re-frame.utils","^?","^6","^6","~$mranderson047.re-frame.v0v10v2.re-frame.registrar","^@","^4","^4","~$interceptor","~$mranderson047.re-frame.v0v10v2.re-frame.interceptor","^B","^B","~$trace","~$mranderson047.re-frame.v0v10v2.re-frame.trace","^D","^D"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","~$app-db","^>","~$get-handler","^@","~$first-in-vector","^?","^5","^6","^7","^6","~$register-handler","^@"],"~:defs",["^ ","~$kind",["^ ","^:","~$mranderson047.re-frame.v0v10v2.re-frame.events/kind","~:file","app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","~:line",11,"~:column",1,"~:end-line",11,"~:end-column",10,"~:meta",["^ ","^N","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^O",11,"^P",6,"^Q",11,"^R",10],"~:tag","~$cljs.core/Keyword"],"~$flatten-and-remove-nils",["^ ","~:protocol-inline",null,"^S",["^ ","^N","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^O",14,"^P",8,"^Q",14,"^R",31,"~:private",true,"~:arglists",["~#list",["~$quote",["^Z",[["~$id","~$interceptors"]]]]],"~:doc","~`interceptors` might have nested collections, and contain nil elements.\n  return a flat collection, with all nils removed.\n  This function is 9/10 about giving good error messages."],"^X",true,"^:","~$mranderson047.re-frame.v0v10v2.re-frame.events/flatten-and-remove-nils","~:variadic",false,"^N","app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^R",31,"~:method-params",["^Z",[["^10","^11"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^P",1,"^O",14,"^Q",14,"~:max-fixed-arity",2,"~:fn-var",true,"^Y",["^Z",["^[",["^Z",[["^10","^11"]]]]],"^12","~`interceptors` might have nested collections, and contain nil elements.\n  return a flat collection, with all nils removed.\n  This function is 9/10 about giving good error messages."],"~$register",["^ ","^W",null,"^S",["^ ","^N","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^O",35,"^P",7,"^Q",35,"^R",15,"^Y",["^Z",["^[",["^Z",[["^10","^11"]]]]],"^12","Associate the given event `id` with the given collection of `interceptors`.\n\n   `interceptors` may contain nested collections and there may be nils\n   at any level,so process this structure into a simple, nil-less vector\n   before registration.\n\n   Typically, an `event handler` will be at the end of the chain (wrapped\n   in an interceptor)."],"^:","~$mranderson047.re-frame.v0v10v2.re-frame.events/register","^14",false,"^N","app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^R",15,"^15",["^Z",[["^10","^11"]]],"^16",null,"^17",["^Z",[null,null]],"^P",1,"^O",35,"^Q",35,"^18",2,"^19",true,"^Y",["^Z",["^[",["^Z",[["^10","^11"]]]]],"^12","Associate the given event `id` with the given collection of `interceptors`.\n\n   `interceptors` may contain nested collections and there may be nils\n   at any level,so process this structure into a simple, nil-less vector\n   before registration.\n\n   Typically, an `event handler` will be at the end of the chain (wrapped\n   in an interceptor)."],"~$*handling*",["^ ","^:","~$mranderson047.re-frame.v0v10v2.re-frame.events/*handling*","^N","app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^O",51,"^P",1,"^Q",51,"^R",26,"~:dynamic",true,"^S",["^ ","^N","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^O",51,"^P",16,"^Q",51,"^R",26,"^1>",true],"^T","~$clj-nil"],"~$handle",["^ ","^W",null,"^S",["^ ","^N","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^O",53,"^P",7,"^Q",53,"^R",13,"^Y",["^Z",["^[",["^Z",[["~$event-v"]]]]],"^12","Given an event vector `event-v`, look up the associated interceptor chain, and execute it."],"^:","~$mranderson047.re-frame.v0v10v2.re-frame.events/handle","^14",false,"^N","app/dev/js/out_front/mranderson047/re_frame/v0v10v2/re_frame/events.cljc","^R",13,"^15",["^Z",[["^1A"]]],"^16",null,"^17",["^Z",[null,null]],"^P",1,"^O",53,"^Q",53,"^18",1,"^19",true,"^Y",["^Z",["^[",["^Z",[["^1A"]]]]],"^12","Given an event vector `event-v`, look up the associated interceptor chain, and execute it."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^C","^D","^D","^D"],"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~:tags","~:else","~:operation","~:start","~:duration","~:event","~:error","~:end","~:op-type"]],"~:order",["^1L","^1M","^1I","^1O","^1G","^1J","^1H","^1K","^1N"]],"^12",null]