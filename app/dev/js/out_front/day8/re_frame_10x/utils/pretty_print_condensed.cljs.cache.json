["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Math",["^ ","~$floor",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.utils.pretty-print-condensed","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$truncate-string",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","~:line",7,"~:column",15,"~:end-line",7,"~:end-column",30,"~:tag","~$string","~:arglists",["~#list",["~$quote",["^M",[["~$n","^K"],["~$n","~$cut-from","^K"]]]]],"~:doc","Truncate a string to length `n`.\n\n  Removal occurs at `cut-from`, which may be :start, :end, or :middle.\n\n  Truncation is indicated by `…` at start/end, or `...` at middle, for readability. ","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^M",[["~$n","^K"],["~$n","^O","^K"]]],"^L",["^M",[["~$n","^K"],["~$n","^O","^K"]]],"~:arglists-meta",["^M",[null,null]]]],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/truncate-string","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",30,"^Q",["^ ","^R",false,"^S",3,"^T",["^M",[["~$n","^K"],["~$n","^O","^K"]]],"^L",["^M",[["~$n","^K"],["~$n","^O","^K"]]],"^U",["^M",[null,null]]],"^T",["^M",[["~$n","^K"],["~$n","^O","^K"]]],"~:protocol-impl",null,"^U",["^M",[null,null]],"^G",1,"^F",7,"~:ret-tag","^K","^H",7,"^S",3,"^J","^K","~:fn-var",true,"^L",["^M",[["~$n","^K"],["~$n","^O","^K"]]],"^P","Truncate a string to length `n`.\n\n  Removal occurs at `cut-from`, which may be :start, :end, or :middle.\n\n  Truncation is indicated by `…` at start/end, or `...` at middle, for readability. "],"~$truncate-segments",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",53,"^G",15,"^H",53,"^I",32,"^J","^K","^L",["^M",["^N",["^M",[["~$s","~$limit"],["~$s","^[","~$match","~$trunc-prefix"]]]]],"^Q",["^ ","^R",false,"^S",4,"^T",["^M",[["~$s","^["],["~$s","^[","^10","^11"]]],"^L",["^M",[["~$s","^["],["~$s","^[","^10","^11"]]],"^U",["^M",[null,null]]]],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/truncate-segments","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",32,"^Q",["^ ","^R",false,"^S",4,"^T",["^M",[["~$s","^["],["~$s","^[","^10","^11"]]],"^L",["^M",[["~$s","^["],["~$s","^[","^10","^11"]]],"^U",["^M",[null,null]]],"^T",["^M",[["~$s","^["],["~$s","^[","^10","^11"]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",53,"^X","^K","^H",53,"^S",4,"^J","^K","^Y",true,"^L",["^M",[["~$s","^["],["~$s","^[","^10","^11"]]]],"~$truncate-named",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",83,"^G",15,"^H",83,"^I",29,"^J","^K","^L",["^M",["^N",["^M",[["~$n","~$named"]]]]],"^P","Truncates `named`, which must satisfy INamed protocol, to within `n`\n   characters, cutting from beginning. Adds a `…` prefix to indicate where\n   cutting has occurred."],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/truncate-named","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",29,"^T",["^M",[["~$n","^14"]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",83,"^X","^K","^H",83,"^S",2,"^J","^K","^Y",true,"^L",["^M",["^N",["^M",[["~$n","^14"]]]]],"^P","Truncates `named`, which must satisfy INamed protocol, to within `n`\n   characters, cutting from beginning. Adds a `…` prefix to indicate where\n   cutting has occurred."],"~$truncate",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",147,"^G",15,"^H",147,"^I",23,"^J","^K","^L",["^M",["^N",["^M",[["~$n","~$location","~$param"]]]]]],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/truncate","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",23,"^T",["^M",[["~$n","^17","^18"]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",147,"^X","^K","^H",147,"^S",3,"^J","^K","^Y",true,"^L",["^M",["^N",["^M",[["~$n","^17","^18"]]]]]],"~$str->namespaced-sym",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",152,"^G",7,"^H",152,"^I",26,"^L",["^M",["^N",["^M",[["~$s"]]]]]],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/str->namespaced-sym","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",26,"^T",["^M",[["~$s"]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",152,"^H",152,"^S",1,"^Y",true,"^L",["^M",["^N",["^M",[["~$s"]]]]]],"~$edges",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",160,"^G",7,"^H",160,"^I",12,"^L",["^M",["^N",["^M",[["~$coll"]]]]],"^P","Return left and right edges of a collection (eg. brackets plus prefixes), defaults to [< >]."],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/edges","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",12,"^T",["^M",[["^1="]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",160,"^H",160,"^S",1,"^Y",true,"^L",["^M",["^N",["^M",[["^1="]]]]],"^P","Return left and right edges of a collection (eg. brackets plus prefixes), defaults to [< >]."],"~$with-edges",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",170,"^G",7,"^H",170,"^I",17,"^L",["^M",["^N",["^M",[["^1=","~$value"]]]]],"^P","Wrap `value` with edges of `coll`"],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/with-edges","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",17,"^T",["^M",[["^1=","^1@"]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",170,"^H",170,"^S",2,"^Y",true,"^L",["^M",["^N",["^M",[["^1=","^1@"]]]]],"^P","Wrap `value` with edges of `coll`"],"~$pretty-condensed",["^ ","^C",null,"^D",["^ ","^E","/Users/iain/Code/Clojure/Descjop/anh/app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^F",176,"^G",7,"^H",176,"^I",23,"^L",["^M",["^N",["^M",[["~$form"],["~$depth","~$enter-pred","~$max-depth","^1C"]]]]],"^P","Render form in abbreviated form, showing content only for keywords/strings/symbols and entering collections to a depth of 1.","^Q",["^ ","^R",false,"^S",4,"^T",["^M",[["^1C"],["^1D","^1E","^1F","^1C"]]],"^L",["^M",[["^1C"],["^1D","^1E","^1F","^1C"]]],"^U",["^M",[null,null]]]],"^9","~$day8.re-frame-10x.utils.pretty-print-condensed/pretty-condensed","^R",false,"^E","app/dev/js/out_front/day8/re_frame_10x/utils/pretty_print_condensed.cljs","^I",23,"^Q",["^ ","^R",false,"^S",4,"^T",["^M",[["^1C"],["^1D","^1E","^1F","^1C"]]],"^L",["^M",[["^1C"],["^1D","^1E","^1F","^1C"]]],"^U",["^M",[null,null]]],"^T",["^M",[["^1C"],["^1D","^1E","^1F","^1C"]]],"^W",null,"^U",["^M",[null,null]],"^G",1,"^F",176,"^H",176,"^S",4,"^Y",true,"^L",["^M",[["^1C"],["^1D","^1E","^1F","^1C"]]],"^P","Render form in abbreviated form, showing content only for keywords/strings/symbols and entering collections to a depth of 1."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:else","~:start","~:middle","~:end"]],"~:order",["^1O","^1M","^1L","^1N"]],"^P","Utilities for pretty-printing abbreviated Clojure forms"]